name: CI
on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "*"
jobs:
  analyze:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.15.x, 1.14.x ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - uses: golangci/golangci-lint-action@v2
        with:
          version: latest
  build:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.15.x, 1.14.x ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Compile
        run: make compile
  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [ 1.16.x, 1.15.x, 1.14.x ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run all tests
        run: make test
      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          flags: ${{ matrix.go-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Post message to Slack
        run: ./.github/post_message_to_slack.sh
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_REPOSITORY: ${{ github.repo }}
          GITHUB_REPOSITORY_REF: ${{ github.ref }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          NEEDS_PREVIOUS_JOB_RESULT: ${{ needs.test.result }}
          SLACK_BOT_USER_OAUTH_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
