name: Release
on:
  push:
    tags:
      - "v*"
jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - name: Compile
        run: make compile RELEASE=true
      - name: Archive
        run: |
          tar -zcvf ./bin/server-linux64.tar.gz ./bin/server
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./bin/server-linux64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  notify:
    if: always()
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Post message to Slack
        run: ./.github/post_message_to_slack.sh
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_REPOSITORY: ${{ github.repo }}
          GITHUB_REPOSITORY_REF: ${{ github.ref }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          NEEDS_PREVIOUS_JOB_RESULT: ${{ needs.release.result }}
          SLACK_BOT_USER_OAUTH_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
