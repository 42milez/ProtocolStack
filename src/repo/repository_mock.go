// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package repo is a generated GoMock package.
package repo

import (
	reflect "reflect"

	error "github.com/42milez/ProtocolStack/src/error"
	mw "github.com/42milez/ProtocolStack/src/mw"
	gomock "github.com/golang/mock/gomock"
)

// MockIDeviceRepo is a mock of IDeviceRepo interface.
type MockIDeviceRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIDeviceRepoMockRecorder
}

// MockIDeviceRepoMockRecorder is the mock recorder for MockIDeviceRepo.
type MockIDeviceRepoMockRecorder struct {
	mock *MockIDeviceRepo
}

// NewMockIDeviceRepo creates a new mock instance.
func NewMockIDeviceRepo(ctrl *gomock.Controller) *MockIDeviceRepo {
	mock := &MockIDeviceRepo{ctrl: ctrl}
	mock.recorder = &MockIDeviceRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDeviceRepo) EXPECT() *MockIDeviceRepoMockRecorder {
	return m.recorder
}

// NextNumber mocks base method.
func (m *MockIDeviceRepo) NextNumber() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NextNumber")
	ret0, _ := ret[0].(int)
	return ret0
}

// NextNumber indicates an expected call of NextNumber.
func (mr *MockIDeviceRepoMockRecorder) NextNumber() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NextNumber", reflect.TypeOf((*MockIDeviceRepo)(nil).NextNumber))
}

// Poll mocks base method.
func (m *MockIDeviceRepo) Poll(terminate bool) error.E {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Poll", terminate)
	ret0, _ := ret[0].(error.E)
	return ret0
}

// Poll indicates an expected call of Poll.
func (mr *MockIDeviceRepoMockRecorder) Poll(terminate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Poll", reflect.TypeOf((*MockIDeviceRepo)(nil).Poll), terminate)
}

// Register mocks base method.
func (m *MockIDeviceRepo) Register(dev mw.IDevice) error.E {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", dev)
	ret0, _ := ret[0].(error.E)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockIDeviceRepoMockRecorder) Register(dev interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockIDeviceRepo)(nil).Register), dev)
}

// Up mocks base method.
func (m *MockIDeviceRepo) Up() error.E {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Up")
	ret0, _ := ret[0].(error.E)
	return ret0
}

// Up indicates an expected call of Up.
func (mr *MockIDeviceRepoMockRecorder) Up() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Up", reflect.TypeOf((*MockIDeviceRepo)(nil).Up))
}

// MockIIfaceRepo is a mock of IIfaceRepo interface.
type MockIIfaceRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIIfaceRepoMockRecorder
}

// MockIIfaceRepoMockRecorder is the mock recorder for MockIIfaceRepo.
type MockIIfaceRepoMockRecorder struct {
	mock *MockIIfaceRepo
}

// NewMockIIfaceRepo creates a new mock instance.
func NewMockIIfaceRepo(ctrl *gomock.Controller) *MockIIfaceRepo {
	mock := &MockIIfaceRepo{ctrl: ctrl}
	mock.recorder = &MockIIfaceRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIIfaceRepo) EXPECT() *MockIIfaceRepoMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIIfaceRepo) Get(unicast mw.IP) *mw.Iface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", unicast)
	ret0, _ := ret[0].(*mw.Iface)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockIIfaceRepoMockRecorder) Get(unicast interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIIfaceRepo)(nil).Get), unicast)
}

// Lookup mocks base method.
func (m *MockIIfaceRepo) Lookup(dev mw.IDevice, family mw.AddrFamily) *mw.Iface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Lookup", dev, family)
	ret0, _ := ret[0].(*mw.Iface)
	return ret0
}

// Lookup indicates an expected call of Lookup.
func (mr *MockIIfaceRepoMockRecorder) Lookup(dev, family interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Lookup", reflect.TypeOf((*MockIIfaceRepo)(nil).Lookup), dev, family)
}

// Register mocks base method.
func (m *MockIIfaceRepo) Register(iface *mw.Iface, dev mw.IDevice) error.E {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", iface, dev)
	ret0, _ := ret[0].(error.E)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockIIfaceRepoMockRecorder) Register(iface, dev interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockIIfaceRepo)(nil).Register), iface, dev)
}

// MockIRouteRepo is a mock of IRouteRepo interface.
type MockIRouteRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIRouteRepoMockRecorder
}

// MockIRouteRepoMockRecorder is the mock recorder for MockIRouteRepo.
type MockIRouteRepoMockRecorder struct {
	mock *MockIRouteRepo
}

// NewMockIRouteRepo creates a new mock instance.
func NewMockIRouteRepo(ctrl *gomock.Controller) *MockIRouteRepo {
	mock := &MockIRouteRepo{ctrl: ctrl}
	mock.recorder = &MockIRouteRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRouteRepo) EXPECT() *MockIRouteRepoMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIRouteRepo) Get(ip mw.IP) *Route {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ip)
	ret0, _ := ret[0].(*Route)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockIRouteRepoMockRecorder) Get(ip interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIRouteRepo)(nil).Get), ip)
}

// Register mocks base method.
func (m *MockIRouteRepo) Register(network, nextHop mw.IP, iface *mw.Iface) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Register", network, nextHop, iface)
}

// Register indicates an expected call of Register.
func (mr *MockIRouteRepoMockRecorder) Register(network, nextHop, iface interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockIRouteRepo)(nil).Register), network, nextHop, iface)
}

// RegisterDefaultGateway mocks base method.
func (m *MockIRouteRepo) RegisterDefaultGateway(iface *mw.Iface, nextHop mw.IP) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RegisterDefaultGateway", iface, nextHop)
}

// RegisterDefaultGateway indicates an expected call of RegisterDefaultGateway.
func (mr *MockIRouteRepoMockRecorder) RegisterDefaultGateway(iface, nextHop interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterDefaultGateway", reflect.TypeOf((*MockIRouteRepo)(nil).RegisterDefaultGateway), iface, nextHop)
}
